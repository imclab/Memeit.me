<div style="text-align: center">
    <div style="width:800px;text-align: center">
        <h1>Welcome to <%= title %></h1>

        <div style="float:left;">Who do you want to troll today? <input id="new_stream_terms" type="text"
                                                                        style="width: 250px;"></div>
        <div id="create_stream" style="float:right;">Create Stream</div>
    </div>
</div>
<br>
<div>

    <div style="float:left;" id="left_nav">
        <%- partial('streamListPartial') %>
    </div>

    <div id="content_div">
        <h3 id="stream_title"></h3>
        <ul id="stream_content" style="list-style-type: none; width:400px;">
        </ul>
    </div>

    <div id="container">

    </div>
</div>

<script>

function createImageElement(src, alt, title) {


    var img = IEWIN ? new Image() : document.createElement('img');
    img.src = src;
    if (alt != null) img.alt = alt;
    if (title != null) img.title = title;
    return img;
}

function createMemeImage(data, width, height, callback) {
    var topText = ''
    var bottomText = ''
    //Lets split this up in to top/bottom text
    if (data.msg.text.length > 50) {
        var splitChars = ['?', '!', '.', ',', ' ', '@', '#', '"', ';']
        var i = 40
        var found = false
        do {
            if (splitChars.indexOf(data.msg.text[i]) > -1) {
                found = true
            }
            i++
        } while ((i < data.msg.text.length) && (!found))
        //no obvious splits
        if (!found) {
            i = Math.abs(data.msg.text.length / 2)
        }
        topText = data.msg.text.substring(0, i)
        bottomText = data.msg.text.substring(i, data.msg.text.length)
    } else {
        topText = data.msg.text
    }
    topText = encodeURIComponent(topText)
    bottomText = encodeURIComponent(bottomText)
    var memeImageUrl = 'http://localhost:3000/memegen?width=' + width + '&height=' + height + '&topText=' + topText + '&bottomText=' + bottomText + '&imageSrc=' + encodeURIComponent('http://i3.kym-cdn.com/photos/images/newsfeed/000/258/290/2fe.png')
    $.get(memeImageUrl, function (imageUrl) {
        if (typeof imageUrl == 'string') {
            callback($('<img>', {
                src:imageUrl,
                width:width,
                height:height,
                alt:data.text,
                title:memeImageUrl
            })
            )
        }
    });
}

function insertElement(selector, element) {
    if ($(selector).length > 0) {
        $(selector).closest('ul').children(':first').before('<li />').append(element);
    } else {
        $(selector).append(element)
    }
}

function selectThumb(e) {
    $('#' + e.getAttribute("parent_id") + ' .img_container').empty().append(
            '<img src="' + e.src + '">');
}


function createSingleView(data) {
    content = [];
    content.push('<div class="item">');
    content.push('<h3>' + data.msg.text + '</h3>')
    content.push('<img src="' + data.msg.trollMeImages[0].imageUrl + '" >');
    content.push('<a href="">Troll Em\'</a>');
    content.push('</div>');
    return content.join('');
}

function createGalleryView(data) {
    content = [];
    content.push('<div class="item" id="' + data.msg.id + '">');
    content.push('<h3>' + data.msg.text + '</h3>');
    content.push('<div class="img_container"></div>');
    content.push('<a href="">Troll Em\'</a>');
    content.push('</div>');
    for (i in data.msg.trollMeImages) {
        content.push('<div class="item thumb">')
        content.push('<img onclick="selectThumb(this)" parent_id="' + data.msg.id + '" src="' + data.msg.trollMeImages[i].imageUrl + '">');
        content.push('</div>');
    }
    return content.join('');
}


$(document).ready(function () {
    $(document).socketEventHandler({host:'<%=app.configSettings.baseUrl%>:<%=app.configSettings.socketPort%>/'})
    $(document).bind('addTweet', function (event, data) {
        if (data.msg) {
            if (typeof data.msg == 'string') {
                data.msg = JSON.parse(data.msg)
            }
        }
        /*
         var content = '<li id="tweet_' + data.msg.id + '" style="margin-bottom: 25px">' + data.msg.text + '<br><b><i>-' + data.msg.user.screen_name + '</i></b></li>'
         $('#stream_content').append(content)
         $('#tweet_' + data.msg.id).append($('<a>', {
         class:'troll_tweet_link',
         id:'troll_tweet_link_' + data.msg.id
         }).text('Trollme'))
         $('#troll_tweet_link_' + data.msg.id).data('data', data)
         $('#troll_tweet_link_' + data.msg.id).click(function (ev) {
         var msg = $(this).data('data')
         createMemeImage(data,400,400,function(imageElement){
         $('#tweet_' + data.msg.id).empty()
         $('#tweet_' + data.msg.id).append(imageElement)
         $('#tweet_' + data.msg.id).append('<br><b><i>-' + data.msg.user.screen_name + '</i></b>')
         })
         }) */

        //$("#container").append('<div class="item">content</div>');

        var tmis = data.msg.trollMeImages;
        if (tmis) {
            //if we have 1 tmi put it in the main view
            if (tmis.lenght == 1) {
                $("#container").append(createSingleView(data));
            } else {
                $("#container").append(createGalleryView(data));
            }
        }


        /*if (data.msg.trollMeImages) {
         var images = data.msg.trollMeImages
         //Do the first image as the main one

         if (images.length > 0) {
         //Do one the first image as the main one
         createMemeImage(data, 400, 400, function (imageElement) {
         var liElement = $('<li>', {id:"tweet_" + data.msg.id}).append(imageElement)

         //THIS REQUIRES AN EMPTY LI IN THE #stream_content UL. I have no idea why.
         if ($('#stream_content').length > 0) {
         $('#stream_content').closest('ul').children(':first').before('<li/>').append(imageElement);
         } else {
         $('#stream_content').append('<li> </li>')
         $('#stream_content').append(imageElement)
         }
         })
         }




         }*/
    })

})

$('.stream_link').click(function (ev) {
    $("#stream_content").empty();
    $('#stream_content').memeStreams('followStream', {streamId:this.id, options:{}});
    $('#stream_title').text('Viewing Stream : [' + $('#' + this.id).text() + ']')
})

//Add a stream
$('#create_stream').click(function (ev) {
    var termString = $('#new_stream_terms').val()
    var terms = parseHashTags(termString)
    terms = terms.concat(parseUserNames(termString))
    var params = {name:'a stream name', terms:terms}
    $.ajax({
        type:'POST',
        url:'/streams',
        data:params,
        success:function (result) {
            if (!result.success) {
                console.log(err)
            } else {
                console.log(result)
                loadStreamList()
            }
        },
        dataType:'json'
    });
})

function loadStreamList() {
    $.get('/?ajax=true', function (streamList) {

        $('#left_nav').empty();
        $('#left_nav').append(streamList)


    })
}

function parseHashTags(text) {
    return text.match(/[#]+[A-Za-z0-9-_]+/g) || [];
}


function parseUserNames(text) {
    return text.match(/[@]+[A-Za-z0-9-_]+/g) || [];
}


</script>
